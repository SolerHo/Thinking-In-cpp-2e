/********************************************************************
 * 
 * Date : 2020 - 02 - 25
 * Author : Soler HO
 * 
 * Book :Thinking in C++
 * 
 * description :  指针算术运算符的用法
 * 
 * 
 ********************************************************************/

#include<iostream>

using namespace std;
/********************************************************************
 * 
 * Date : 2020 - 02 - 25
 * Author : Soler HO
 * 
 * Book :Thinking in C++
 * 
 * description :  宏定义#define的一些细节
 * 
 * 以宏定义开始程序，使用了一个称为字符串转化的预处理器特征
 * 在表达式前用一个“ # ”实现。
 * 作用：获得任何一个表达式并把它转换为一个字符数组。
 * 
 * 
 ********************************************************************/


#define P(EX) cout<<#EX<<":"<<EX<<endl;

int main()
{
    int a[10];
    for(int i = 0;i < 10;i++)
        a[i] = i;
    int* ip = a;
    P(*ip);
    P(*++ip);
    P(*(ip + 5));
    int* ip2 = ip + 5;
    P(*ip2);
    P(*(ip2 - 4));
    P(*--ip2);
    P(ip2 - ip);

}

// 指针算术根据所指元素的大小调整指针，使其指向“正确的地方”。

